/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion;

import conexionesBD.Conexion;
import dominio.Cliente;
import dominio.Transferencia;
import dominio.Cuenta;
import excepciones.PersistenciaException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class GenerarTransferencia extends javax.swing.JFrame {

    Conexion conexion = new Conexion();
    List<Cuenta> cuentas;
    Cliente cliente;
    Cliente clienteDestinatario;
    List<Cuenta> cuentasDestinatario;
    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
    Transferencia transferenciaGuardada;

    public void setClienteDestinatario(Cliente clienteDestinatario) {
        this.clienteDestinatario = clienteDestinatario;
    }

    /**
     * Creates new form GenerarTransferencia
     */
    public GenerarTransferencia(Cliente cliente, List<Cuenta> cuentas) throws PersistenciaException {
        this.cliente = cliente;
        this.cuentas = cuentas;
        initComponents();

        guardarCuentasClienteOrigen();
    }

    public void guardarCuentasClienteOrigen() throws PersistenciaException {

        String nombre;

        this.comBoxCuentasCliente.removeAllItems();//limpia el combobox

        //try por si fallara al momento de rellenar
        try {

            for (int i = 0; i < cuentas.size(); i++) {

                nombre = String.valueOf(cuentas.get(i).getNumero_cuenta());
                //Se arega un nuevo ítem al combobox
                this.comBoxCuentasCliente.addItem(nombre);
            }

        } catch (Exception e) { //capta el error y lo muestra
            JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
        }
    }

    public void guardarCuentasClienteDestinatario() throws PersistenciaException {
        String nombre;
        cuentasDestinatario = conexion.generarListaCuentas(clienteDestinatario);

        this.comBoxCuentasClienteDestinatario.removeAllItems();//limpia el combobox
        //try por si fallara al momento de rellenar
        try {

            //Se arega un nuevo ítem al combobox
            for (int i = 0; i < cuentasDestinatario.size(); i++) {
                nombre = String.valueOf(cuentasDestinatario.get(i).getNumero_cuenta());
                this.comBoxCuentasClienteDestinatario.addItem(nombre);
            }

        } catch (Exception e) { //capta el error y lo muestra
            JOptionPane.showMessageDialog(null, "Error al cargar ComboBox" + e);
        }
    }

    public void guardarClienteDestinatario() {
        clienteDestinatario = conexion.clienteID(Integer.parseInt(this.txtiDClienteDestinatario.getText()));

    }

    public void determinarCuentasDestinatario() {
        for (int i = 0; i < cuentasDestinatario.size(); i++) {
            if (this.comBoxCuentasCliente.getSelectedItem().
                    equals(this.comBoxCuentasClienteDestinatario.getItemAt(i))) {
                this.comBoxCuentasClienteDestinatario.removeItemAt(i);
            }
        }

    }

    public void guardarTransferencia() {
        Transferencia transferencia = new Transferencia(dateFormat.format(new Date()),
                Integer.parseInt(String.valueOf(comBoxCuentasCliente.getSelectedItem())),
                Integer.parseInt(String.valueOf(comBoxCuentasClienteDestinatario.getSelectedItem())),
                Float.parseFloat(this.txtMonto.getText()));
        JOptionPane.showMessageDialog(null, transferencia.toString());

        try {
            conexion.ingresarTranferencia(transferencia);
        } catch (PersistenciaException ex) {
            Logger.getLogger(GenerarTransferencia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel9 = new javax.swing.JLabel();
        comBoxCuentasCliente = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        comBoxCuentasClienteDestinatario = new javax.swing.JComboBox<>();
        txtNombreClienteDistinatario = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        btnValidar = new javax.swing.JButton();
        txtiDClienteDestinatario = new javax.swing.JTextField();
        btnEnvial = new javax.swing.JButton();
        txtMonto = new javax.swing.JTextField();

        jScrollPane1.setViewportView(jTextPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setText("Transferenecia");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setText("Destinatario ID:");

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel11.setText("Cuentas");

        comBoxCuentasClienteDestinatario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comBoxCuentasClienteDestinatarioActionPerformed(evt);
            }
        });

        txtNombreClienteDistinatario.setEditable(false);

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("Mis Cuentas");

        btnValidar.setText("Validar");
        btnValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarActionPerformed(evt);
            }
        });

        btnEnvial.setText("Enviar");
        btnEnvial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnvialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(btnEnvial))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(219, 219, 219)
                        .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12)
                    .addComponent(comBoxCuentasCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtiDClienteDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNombreClienteDistinatario, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnValidar))
                    .addComponent(comBoxCuentasClienteDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtiDClienteDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreClienteDistinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnValidar))
                        .addGap(2, 2, 2)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(comBoxCuentasClienteDestinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(comBoxCuentasCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(txtMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEnvial)
                .addGap(98, 98, 98))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarActionPerformed
        guardarClienteDestinatario();
        this.txtNombreClienteDistinatario.setText(clienteDestinatario.getNombre()
                + " " + clienteDestinatario.getApellido_paterno() + " "
                + clienteDestinatario.getApellido_materno());

        try {
            guardarCuentasClienteDestinatario();
        } catch (PersistenciaException ex) {
            Logger.getLogger(GenerarTransferencia.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnValidarActionPerformed

    private void comBoxCuentasClienteDestinatarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comBoxCuentasClienteDestinatarioActionPerformed
        // TODO add your handling code here:
        determinarCuentasDestinatario();
    }//GEN-LAST:event_comBoxCuentasClienteDestinatarioActionPerformed

    private void btnEnvialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnvialActionPerformed

        guardarTransferencia();
    }//GEN-LAST:event_btnEnvialActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnvial;
    private javax.swing.JButton btnValidar;
    private javax.swing.JComboBox<String> comBoxCuentasCliente;
    private javax.swing.JComboBox<String> comBoxCuentasClienteDestinatario;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextField txtMonto;
    private javax.swing.JTextField txtNombreClienteDistinatario;
    private javax.swing.JTextField txtiDClienteDestinatario;
    // End of variables declaration//GEN-END:variables
}
